{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { createStore } from 'redux';\n/*reducer是一个回调函数，包含两个对象参数，state和action*/\n\nlet data = (data = [], action) => {\n  switch (action.type) {\n    case \"ADD\":\n      return [...data, {\n        id: Date.now(),\n        title: action.title,\n        singer: action.singer,\n        selected: false,\n        like: false\n      }];\n\n    case \"REMOVE\":\n      return data.filter(item => item.id !== action.id);\n\n    default:\n      return data;\n  }\n};\n\nconst counterReducer = (state = 0, action) => {\n  switch (action.type) {\n    case 'ADD':\n      return state + 1;\n\n    case 'MINUS':\n      return state - 1;\n\n    default:\n      return state;\n  }\n};\n/*合并两个reducer*/\n\n\nlet reducer = combineReducers({\n  data,\n  counterReducer\n});\n/*创建一个store*/\n\nlet store = createStore(reducer);\nexport default reducer;","map":{"version":3,"sources":["H:/前端/react/playlist/redux-Demo/src/reducer.js"],"names":["combineReducers","createStore","data","action","type","id","Date","now","title","singer","selected","like","filter","item","counterReducer","state","reducer","store"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;AACA,SAAQC,WAAR,QAA0B,OAA1B;AAEA;;AACA,IAAIC,IAAI,GAAG,CAAEA,IAAI,GAAG,EAAT,EAAaC,MAAb,KAAuB;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,KAAL;AACI,aAAO,CAAE,GAAGF,IAAL,EAAY;AACfG,QAAAA,EAAE,EAAGC,IAAI,CAACC,GAAL,EADU;AAEfC,QAAAA,KAAK,EAAGL,MAAM,CAACK,KAFA;AAGfC,QAAAA,MAAM,EAAGN,MAAM,CAACM,MAHD;AAIfC,QAAAA,QAAQ,EAAG,KAJI;AAKfC,QAAAA,IAAI,EAAG;AALQ,OAAZ,CAAP;;AAOJ,SAAK,QAAL;AACI,aAAOT,IAAI,CAACU,MAAL,CAAgBC,IAAF,IAAWA,IAAI,CAACR,EAAL,KAAYF,MAAM,CAACE,EAA5C,CAAP;;AAEJ;AACI,aAAOH,IAAP;AAbR;AAeH,CAhBD;;AAkBA,MAAMY,cAAc,GAAG,CAACC,KAAK,GAAG,CAAT,EAAYZ,MAAZ,KAAuB;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACA,SAAK,KAAL;AACA,aAAOW,KAAK,GAAG,CAAf;;AACA,SAAK,OAAL;AACA,aAAOA,KAAK,GAAG,CAAf;;AACA;AACA,aAAOA,KAAP;AANA;AAQF,CATF;AAWA;;;AACA,IAAIC,OAAO,GAAEhB,eAAe,CAAC;AAACE,EAAAA,IAAD;AAAMY,EAAAA;AAAN,CAAD,CAA5B;AAEA;;AACA,IAAIG,KAAK,GAAChB,WAAW,CAACe,OAAD,CAArB;AAIA,eAAeA,OAAf","sourcesContent":["import {combineReducers} from \"redux\";\r\nimport {createStore} from 'redux';\r\n\r\n/*reducer是一个回调函数，包含两个对象参数，state和action*/\r\nlet data = ( data = [], action )=>{\r\n    switch (action.type) {\r\n        case \"ADD\":\r\n            return [ ...data , {\r\n                id : Date.now () ,\r\n                title : action.title ,\r\n                singer : action.singer ,\r\n                selected : false ,\r\n                like : false\r\n            } ]\r\n        case \"REMOVE\":\r\n            return data.filter ( ( item )=> item.id !== action.id );\r\n\r\n        default:\r\n            return data;\r\n    }\r\n}\r\n\r\nconst counterReducer = (state = 0, action) => {\r\n    switch (action.type) {\r\n    case 'ADD':\r\n    return state + 1\r\n    case 'MINUS':\r\n    return state - 1\r\n    default:\r\n    return state\r\n    }\r\n }\r\n\r\n/*合并两个reducer*/\r\nlet reducer= combineReducers({data,counterReducer});\r\n\r\n/*创建一个store*/\r\nlet store=createStore(reducer);\r\n\r\n\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}