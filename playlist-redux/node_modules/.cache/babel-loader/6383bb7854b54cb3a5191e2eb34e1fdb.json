{"ast":null,"code":"import { combineReducers } from \"redux\";\n\nlet data = (data = [], action) => {\n  switch (action.type) {\n    case \"ADD\":\n      return [...data, {\n        id: Date.now(),\n        title: action.title,\n        singer: action.singer,\n        selected: false,\n        like: false\n      }];\n\n    case \"REMOVE\":\n      return data.filter(item => item.id !== action.id);\n\n    case \"CHECK_ALL\":\n      return data.map(item => {\n        item.selected = action.check;\n        return Object.assign({}, item);\n      });\n\n    case \"CHECK\":\n      return data.forEach(item => {\n        if (item.id === action.id) {\n          item.selected = action.checked;\n        }\n      });\n\n    default:\n      return data;\n  }\n};\n\nlet reducer = combineReducers({\n  data\n});\nexport default reducer;","map":{"version":3,"sources":["H:/前端/react/Node-Search/playlist-redux/src/reducer.js"],"names":["combineReducers","data","action","type","id","Date","now","title","singer","selected","like","filter","item","map","check","Object","assign","forEach","checked","reducer"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;;AAGA,IAAIC,IAAI,GAAG,CAAEA,IAAI,GAAG,EAAT,EAAaC,MAAb,KAAuB;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,KAAL;AACI,aAAO,CAAE,GAAGF,IAAL,EAAY;AACfG,QAAAA,EAAE,EAAGC,IAAI,CAACC,GAAL,EADU;AAEfC,QAAAA,KAAK,EAAGL,MAAM,CAACK,KAFA;AAGfC,QAAAA,MAAM,EAAGN,MAAM,CAACM,MAHD;AAIfC,QAAAA,QAAQ,EAAG,KAJI;AAKfC,QAAAA,IAAI,EAAG;AALQ,OAAZ,CAAP;;AAOJ,SAAK,QAAL;AACI,aAAOT,IAAI,CAACU,MAAL,CAAgBC,IAAF,IAAWA,IAAI,CAACR,EAAL,KAAYF,MAAM,CAACE,EAA5C,CAAP;;AACJ,SAAK,WAAL;AACI,aAAOH,IAAI,CAACY,GAAL,CAAUD,IAAD,IAAQ;AACpBA,QAAAA,IAAI,CAACH,QAAL,GAAgBP,MAAM,CAACY,KAAvB;AACA,eAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBJ,IAAjB,CAAP;AACH,OAHM,CAAP;;AAIJ,SAAK,OAAL;AACI,aAAOX,IAAI,CAACgB,OAAL,CAAcL,IAAD,IAAQ;AACtB,YAAGA,IAAI,CAACR,EAAL,KAAUF,MAAM,CAACE,EAApB,EAAuB;AACpBQ,UAAAA,IAAI,CAACH,QAAL,GAAcP,MAAM,CAACgB,OAArB;AACF;AACN,OAJM,CAAP;;AAKJ;AACI,aAAOjB,IAAP;AAvBR;AAyBH,CA1BD;;AA2BA,IAAIkB,OAAO,GAAEnB,eAAe,CAAC;AAACC,EAAAA;AAAD,CAAD,CAA5B;AAEA,eAAekB,OAAf","sourcesContent":["import {combineReducers} from \"redux\";\r\n\r\n\r\nlet data = ( data = [], action )=>{\r\n    switch (action.type) {\r\n        case \"ADD\":\r\n            return [ ...data , {\r\n                id : Date.now () ,\r\n                title : action.title ,\r\n                singer : action.singer ,\r\n                selected : false ,\r\n                like : false\r\n            } ]\r\n        case \"REMOVE\":\r\n            return data.filter ( ( item )=> item.id !== action.id );\r\n        case \"CHECK_ALL\":\r\n            return data.map((item)=>{\r\n                item.selected = action.check;\r\n                return Object.assign({},item);\r\n            })\r\n        case \"CHECK\":\r\n            return data.forEach((item)=>{\r\n                  if(item.id===action.id){\r\n                     item.selected=action.checked;\r\n                  }\r\n            })\r\n        default:\r\n            return data;\r\n    }\r\n}\r\nlet reducer= combineReducers({data});\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}