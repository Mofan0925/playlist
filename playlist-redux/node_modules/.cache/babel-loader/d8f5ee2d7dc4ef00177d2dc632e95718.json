{"ast":null,"code":"var _jsxFileName = \"H:\\\\\\u524D\\u7AEF\\\\react\\\\Node-Search\\\\playlist-redux\\\\src\\\\main.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport List from \"./list\";\n\nclass Main extends React.Component {\n  render() {\n    let data = this.props.data;\n    return React.createElement(\"table\", {\n      className: \"main\",\n      style: {\n        display: data.length ? \"table\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"checkAll\",\n      checked: this.props.isCheckAll,\n      onChange: e => {\n        this.props.dispatch({\n          type: \"CHECK_ALL\",\n          check: e.target.checked\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"checkAll\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"\\u5168\\u9009\")), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"\\u6B4C\\u66F2\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"\\u6B4C\\u624B\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"\\u6536\\u85CF\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"\\u5220\\u9664\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, data.map(val => {\n      return React.createElement(List, {\n        key: val.id,\n        index: val.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\nexport default connect((state, props) => {\n  let isCheckAll = () => {\n    for (var i = 0; i < state.data.length; i++) {\n      if (!state.data[i].selected) {\n        return false;\n      }\n    }\n\n    return true;\n  }; //return Object.assign({},state,{isCheckAll:isCheckAll()});\n\n\n  let pathName = props.location.pathname;\n\n  if (pathName === \"/\") {\n    return Object.assign({}, state, {\n      isCheckAll\n    });\n  }\n\n  if (pathName === \"/like\") {\n    let data = {};\n    data.data = state.data.filter(item => item.like);\n    return Object.assign({}, data, {\n      isCheckAll\n    });\n  }\n})(Main);","map":{"version":3,"sources":["H:/前端/react/Node-Search/playlist-redux/src/main.js"],"names":["React","connect","List","Main","Component","render","data","props","display","length","isCheckAll","e","dispatch","type","check","target","checked","map","val","id","state","i","selected","pathName","location","pathname","Object","assign","filter","item","like"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {connect} from 'react-redux';\nimport List from \"./list\";\n\nclass Main extends React.Component {\n    render(){\n        let data = this.props.data;\n        return (\n            <table className=\"main\" style={{ display:data.length? \"table\":\"none\"}}>\n                <thead>\n                <tr>\n                    <th>\n                        <input\n                            type=\"checkbox\"\n                            id=\"checkAll\"\n                            checked={this.props.isCheckAll}\n                            onChange={(e)=>{\n                                this.props.dispatch({\n                                    type: \"CHECK_ALL\",\n                                    check: e.target.checked\n                                })\n                             }}/>\n                        <label htmlFor=\"checkAll\">全选</label>\n                    </th>\n                    <th>歌曲</th>\n                    <th>歌手</th>\n                    <th>收藏</th>\n                    <th>删除</th>\n                </tr>\n                </thead>\n                <tbody>\n                {data.map((val)=>{\n                    return (<List\n                        key={val.id}\n                        index = {val.id}\n                        />)\n                })}\n                </tbody>\n            </table>\n        );\n    }\n}\nexport default connect((state,props)=>{\n\n      let isCheckAll=()=>{\n         for(var i=0; i<state.data.length; i++){\n             if(!state.data[i].selected){\n                 return false;\n             }\n         }\n          return true;\n      }\n    //return Object.assign({},state,{isCheckAll:isCheckAll()});\n\n    let pathName = props.location.pathname;\n    if(pathName === \"/\"){\n        return Object.assign({},state,{isCheckAll});\n    }\n\n    if(pathName === \"/like\"){\n        let data = {};\n        data.data = state.data.filter((item)=>item.like);\n        return Object.assign({},data,{isCheckAll});\n    }\n\n} )(Main);"]},"metadata":{},"sourceType":"module"}